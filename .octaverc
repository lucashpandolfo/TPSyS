% -*- mode: Octave; -*-
Fs=50e6;
PRF=250;

function [] = cambiarEjeX(string, escala)
  xt = get(gca,'XTick');
  for i = 1:length(xt)
    xtl{i} = sprintf(string ,xt(i)*escala);
  end
  set(gca,'XTickLabel',xtl);
end

function [] = cambiarEjeY(string, escala)
  yt = get(gca,'YTick');
  for i = 1:length(yt)
    ytl{i} = sprintf(string ,yt(i)*escala);
  end
  set(gca,'YTickLabel',ytl);
end

function [salida] = guardarImagen(nombre)
  print(nombre, '-dpdfwrite','-tight');
  salida = nombre;
end

function [salida] = guardarImagenjpg(nombre)
  print(nombre, '-djpg');
  salida = nombre;
end

function [salida] = chirp_no_modulada(t)
  k2=-20e6;
  k1=2e12;
  salida = e.^(j*(2*pi*(k1*t.^2+k2*t)));
end

function[salida] = mi_chirp(fc1, fc2, bw, duracion,t)
  k2 = fc1;
  k1 = (fc2 - k2)/(2*duracion);
  salida = e.^(j*(2*pi*(k1*t.^2+k2*t)));
end


function [datos] = cargarMatriz()
  datos = load('/home/lucas/Octave/TPSyS/data/SAR_data_subset.mat').data;
end

function [datos] = cargarMatrizCompleta()
  datos = load('/home/lucas/Octave/TPSyS/data/SAR_data.mat').data;
end
  
function [datos] = cargarChirp()
  chirps = cargarMatriz()(1:200,16:515);
  datos = sum(chirps, 1)/rows(chirps);
end

function [tri] = triangulo(ancho, medio, anchoTotal, MPM)
  t1 = bartlett(ancho*MPM).';
  t2 = zeros(1,anchoTotal*MPM);
  medio = medio + anchoTotal/2
  t2((floor(medio-ancho/2))*MPM+1:(floor(medio+ancho/2))*MPM)=t1;
  tri=t2;
end
